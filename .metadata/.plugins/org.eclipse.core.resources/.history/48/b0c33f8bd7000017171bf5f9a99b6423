/**
 * 
 */
package com.rest.hotels;

import java.io.IOException;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hotels.beans.Hotel;


public class HttpRequestClient {
    
    public  Hotel sendHttpPost(String urlValue, String query) {
//        StringBuffer output = new StringBuffer();
//        Map<String,String> mapOutput = null;
//        
//        if(urlValue == null || urlValue.trim().length() == 0) {
//            throw new IllegalArgumentException("The passed backend URL value must NOT be null or empty");
//        }
//        
//        int connectTimeOutInMilliSeconds = 60000;
//        
//        int readTimeOutInMilliSeconds = 60000;
//        URL url = null; 
//        URLConnection conn = null;
//        
//        try {
//            // Send the request
//            url = new URL(urlValue);
//            conn = url.openConnection();
//            
//            conn.setConnectTimeout(connectTimeOutInMilliSeconds);
//            conn.setReadTimeout(readTimeOutInMilliSeconds);
//            
//            conn.setDoOutput(true);
//            conn.setDoInput(true);
//            
//            conn.connect();
//        } catch (IOException e) {
//            System.out.println("HibHttpRequestClienternateUtil-HttpRequestClient-  An error while creating a connection with the backend");
//        }
//        
//        try {
//            OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());
//            
//            //write parameters
//            writer.write(query);
//            writer.flush();
//            
//            writer.close();
//        } catch (IOException e) {
//        	System.out.println("HibHttpRequestClienternateUtil-HttpRequestClient- An error while sending a request to the backend");
//        }
//        
//        try {
//            // Get the response
//            output = new StringBuffer();
//            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream(), "UTF-8"));
//            String line;
//            
//            while ((line = reader.readLine()) != null) {
//                output.append(line);
//            }
//            
//            reader.close();
//            
//        } catch (IOException e) {
//        	System.out.println("HibHttpRequestClienternateUtil-HttpRequestClient- An error while receiving a response from the backend");
//        }
    
//    	  try {
//              mapOutput = parseStringToMap(output.toString(), "&", true);
//          } catch (Exception e) {
//          	System.out.println("HibHttpRequestClienternateUtil-HttpRequestClient- An error while parsing a response from the backend");
//          }
//          
//          return mapOutput;
    	Hotel hotelResponseBean = null ;
    	String dummyOutput ="";
    	try {
        	
        	hotelResponseBean = getResponseBeanFromJsonString(dummyOutput, Hotel.class);
        } catch (Exception e) {
        	System.out.println("HibHttpRequestClienternateUtil-HttpRequestClient- An error while parsing a response from the backend");
        }
        
        return hotelResponseBean;
    }
    
//    /**
//     * Parses a String into a Map.
//     * 
//     * @param src           The string to convert into a map
//     * @param separator     The separator used within the string
//     * @param handleAndSign         flag if true & sign is replaced with //& and should later be handled accordingly
//     * @return                      The map that matches the string
//     * @throws Exception
//     */
//    public static final Map<String, String> parseStringToMap(String src, String separator, boolean handleAndSign)
//    throws Exception {
//        Map<String, String> nameValuePair = new HashMap<String, String>();
//        
//        if (src != null && src.trim().length() > 0) {
//            String          name                    = null;
//            String          value                   = null;
//            
//            String []namesValues =  src.toString().split(separator);
//            
//            for(String nameValue: namesValues) {
//                
//                if(nameValue.indexOf("=") == -1) {
//                    value = new StringBuilder (nameValuePair.get(name)).append(separator).append(nameValue).toString();
//                } else {
//                    name = nameValue.substring(0, nameValue.indexOf("=")); 
//                    value = nameValue.substring(nameValue.indexOf("=") + 1);
//                }
//                
//                // If value contains //& then replace back with &
//                if (handleAndSign && value.indexOf("//&") != -1) {
//                    value = value.replaceAll("//&", "&");
//                }
//                
//                nameValuePair.put(name, value);
//            }
//        }
//        
//        return nameValuePair;
//    }
    
    protected <T> T getResponseBeanFromJsonString(String jsonString, Class<T> classType) throws JsonParseException,
    JsonMappingException, IOException {
    	ObjectMapper mapper = new ObjectMapper();


    	mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

    	T dto = mapper.readValue(jsonString, classType);

    	return dto;
}
}
