/**
 * 
 */
package com.rest.hotels;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.nio.charset.Charset;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hotels.beans.Offers;

public class HttpRequestClient {

	public Offers sendRequest(String urlValue, String query) {

		Offers res = null;
		String Output = "";
		String URL  = urlValue + query ;
		try {
			
			System.out.println("Requeted URL:" + URL );
			StringBuilder sb = new StringBuilder();
			URLConnection urlConn = null;
			InputStreamReader in = null;
			try {
				URL url = new URL(urlValue + query);
				urlConn = url.openConnection();
				if (urlConn != null)
					urlConn.setReadTimeout(60 * 1000);
				if (urlConn != null && urlConn.getInputStream() != null) {
					in = new InputStreamReader(urlConn.getInputStream(),Charset.defaultCharset());
					BufferedReader bufferedReader = new BufferedReader(in);
					if (bufferedReader != null) {
						int cp;
						while ((cp = bufferedReader.read()) != -1) {sb.append((char) cp);
						}
						bufferedReader.close();
					}
				}
				in.close();
			} catch (Exception e) {
				throw new RuntimeException("Exception while calling URL:" + URL,e);
			}

			Output = sb.toString();
			res = getResponseBeanFromJsonString(Output, Offers.class);
		} catch (Exception e) {
			System.out.println("An error while parsing a response from the Expedia");
		}
		return res;
	}


	private <T> T getResponseBeanFromJsonString(String jsonString,
			Class<T> classType) throws JsonParseException,
			JsonMappingException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,false);
		T dto = mapper.readValue(jsonString, classType);
		return dto;
	}
}
